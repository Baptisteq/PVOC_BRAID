#N canvas 906 137 742 628 12;
#X floatatom 494 315 5 0 0 0 - transpo-set-#1 -, f 5;
#X floatatom 167 383 3 0 0 0 - speed-set-#1 -, f 3;
#X floatatom 55 385 7 0 0 0 - location-set-#1 -, f 7;
#N canvas 580 83 821 693 fft-analysis 0;
#X obj 51 477 *~;
#X obj 18 477 *~;
#X obj 18 499 -~;
#X obj 167 475 *~;
#X obj 136 475 *~;
#X obj 136 497 +~;
#X obj 109 193 *~;
#X obj 78 193 *~;
#X obj 50 193 *~;
#X obj 19 193 *~;
#X obj 19 218 +~;
#X obj 127 379 *~;
#X obj 20 622 *~;
#X obj 238 430 rfft~;
#X obj 108 161 rfft~;
#X obj 19 564 rifft~;
#X obj 21 646 outlet~;
#X obj 97 379 *~;
#X obj 97 401 +~;
#X obj 124 218 -~;
#X obj 18 431 *~;
#X obj 51 432 *~;
#X obj 426 644 block~;
#X obj 19 349 +~ 1e-015;
#X obj 19 598 *~;
#X obj 127 643 expr 2/(3*$f1);
#X msg 426 619 set \$1 4;
#X obj 97 425 q8_rsqrt~;
#N canvas 960 50 944 982 read-windows 0;
#X obj 18 693 *~;
#X obj 166 303 f;
#X obj 102 139 /;
#X obj 195 695 *~;
#X obj 166 252 bang~;
#X obj 17 551 line~;
#X obj 102 164 * 1000;
#X obj 208 305 +;
#X obj 288 275 *;
#X obj 188 371 / 1000;
#X obj 166 394 *;
#X text 198 394 reading location (samples);
#X obj 51 597 / 4;
#X obj 288 245 * 0.01;
#X floatatom 340 498 7 0 0 0 - - -, f 7;
#X obj 340 474 *;
#X obj 499 387 * 0.01;
#X obj 501 408 + 69;
#X obj 502 429 mtof;
#X obj 502 451 / 440;
#X obj 375 474 t b f;
#X obj 19 719 outlet~;
#X obj 195 720 outlet~;
#X msg 803 409 0;
#X msg 768 532 set \$1;
#X text 411 498 stretched window size (samples);
#X msg 877 533 set \$1;
#X msg 826 278 set \$1;
#X obj 808 140 t b f;
#X obj 826 249 f;
#X obj 754 171 int;
#X obj 754 203 sel 0;
#X msg 813 174 1;
#X msg 813 197 0;
#X floatatom 111 187 5 0 0 0 - - -, f 5;
#X obj 102 115 t f b;
#X obj 324 150 samplerate~;
#X obj 102 208 / 4;
#X obj 203 420 / 2;
#X obj 166 420 -;
#X text 239 417 back up 1/2 window;
#X obj 16 597 -~;
#X text 43 6 Read two windows out of the recorded sample \, one 1/4
ahead of the other. The mid point of the front window is specified
by "location". If "speed" is nonzero \, "location" automatically precesses.
;
#X obj 517 725 * -0.5;
#X text 81 601 "back" window 1/4 cycle behind "front" one;
#X text 137 205 computation period (msec) for overlap of 4;
#X text 164 186 msec in a window;
#X obj 517 671 /;
#X obj 517 696 * 1000;
#X obj 517 647 t f b;
#X obj 641 679 samplerate~;
#X obj 517 624 f;
#X text 326 275 loop to precess the location according;
#X text 325 291 to the "speed" parameter.;
#X text 611 31 if location changes \, update number box;
#X text 610 50 in main window via "location-set" \, but;
#X text 613 69 taking care to limit frequency of updates.;
#X text 756 462 reflect control changes;
#X text 756 479 in main window.;
#X text 754 344 setting location by hand;
#X text 752 362 sets speed to zero.;
#X text 496 527 "rewind" control takes us;
#X text 499 545 to a location depending on;
#X text 499 564 stretched window size.;
#X obj 16 469 f;
#X obj 17 496 pack;
#X obj 15 440 b;
#X msg 17 523 0 \, \$1 \$2;
#X obj 655 288 s location-pvoc-\$1;
#X obj 755 227 del 30;
#X obj 356 103 * 1000;
#X obj 210 127 f;
#X obj 624 597 r sampleperms-\$1;
#X obj 624 622 * 1000;
#X obj 605 648 f;
#X obj 17 637 tabread4~ \$1-sample;
#X obj 194 637 tabread4~ \$1-sample;
#X obj 768 508 r speed-\$1;
#X obj 877 507 r transpo-\$1;
#X obj 768 557 s speed-set-\$1;
#X obj 877 558 s transpo-set-\$1;
#X obj 517 591 r rewind-\$1;
#X obj 499 365 r transpo-\$1;
#X obj 340 448 r window-size-\$1;
#X obj 102 91 r window-size-\$1;
#X obj 226 329 r \$1-insamprate;
#X obj 803 386 r location-\$1;
#X obj 803 444 s speed-\$1;
#X obj 826 302 s location-set-\$1;
#X obj 817 116 r see-loc-\$1;
#X obj 808 94 r location-\$1;
#X obj 218 664 tabreceive~ \$1-hann;
#X msg 623 756 \; location-\$1 \$1;
#X floatatom 51 139 5 0 0 0 - - -, f 5;
#X floatatom 208 165 5 0 0 0 - - -, f 5;
#X obj 301 55 r sampleperms-\$1;
#X obj 288 222 r speed-\$1;
#X obj 175 273 r location-\$1;
#X obj 243 309 s see-loc-\$1;
#X obj 302 79 t b b f;
#X floatatom 816 609 5 0 0 0 - - -, f 5;
#X floatatom 106 747 12 0 0 0 - - -, f 12;
#X connect 0 0 21 0;
#X connect 1 0 7 0;
#X connect 1 0 10 0;
#X connect 2 0 6 0;
#X connect 3 0 22 0;
#X connect 4 0 1 0;
#X connect 5 0 41 0;
#X connect 5 0 76 0;
#X connect 6 0 34 0;
#X connect 6 0 37 0;
#X connect 7 0 1 1;
#X connect 7 0 98 0;
#X connect 8 0 7 1;
#X connect 9 0 10 1;
#X connect 10 0 39 0;
#X connect 12 0 41 1;
#X connect 13 0 8 0;
#X connect 14 0 12 0;
#X connect 14 0 38 0;
#X connect 14 0 51 1;
#X connect 14 0 64 1;
#X connect 15 0 14 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 15 0;
#X connect 20 1 15 1;
#X connect 24 0 79 0;
#X connect 24 0 100 0;
#X connect 26 0 80 0;
#X connect 27 0 88 0;
#X connect 28 0 30 0;
#X connect 28 1 29 1;
#X connect 29 0 27 0;
#X connect 29 0 68 0;
#X connect 30 0 31 0;
#X connect 31 0 32 0;
#X connect 31 0 69 0;
#X connect 32 0 30 1;
#X connect 33 0 30 1;
#X connect 35 0 2 0;
#X connect 35 1 71 0;
#X connect 37 0 8 1;
#X connect 37 0 65 1;
#X connect 38 0 39 1;
#X connect 39 0 66 0;
#X connect 39 0 75 1;
#X connect 39 0 76 1;
#X connect 39 0 101 0;
#X connect 41 0 75 0;
#X connect 47 0 48 0;
#X connect 48 0 43 0;
#X connect 49 0 47 0;
#X connect 49 1 74 0;
#X connect 51 0 49 0;
#X connect 64 0 65 0;
#X connect 65 0 67 0;
#X connect 66 0 64 0;
#X connect 67 0 5 0;
#X connect 69 0 33 0;
#X connect 69 0 29 0;
#X connect 70 0 71 1;
#X connect 71 0 2 1;
#X connect 71 0 94 0;
#X connect 72 0 73 0;
#X connect 73 0 74 1;
#X connect 74 0 47 1;
#X connect 75 0 0 0;
#X connect 76 0 3 0;
#X connect 77 0 24 0;
#X connect 78 0 26 0;
#X connect 81 0 51 0;
#X connect 82 0 16 0;
#X connect 83 0 15 0;
#X connect 84 0 35 0;
#X connect 84 0 93 0;
#X connect 85 0 10 0;
#X connect 86 0 23 0;
#X connect 89 0 28 0;
#X connect 90 0 28 0;
#X connect 91 0 3 1;
#X connect 91 0 0 1;
#X connect 95 0 99 0;
#X connect 95 0 10 1;
#X connect 96 0 13 0;
#X connect 97 0 1 1;
#X connect 99 0 2 0;
#X connect 99 1 71 0;
#X connect 99 2 70 0;
#X restore 109 133 pd read-windows;
#X text 272 5 recall previous output amplitude. Its phase will be added
to the phase difference we measure from two windows in the the recorded
sound.;
#X obj 121 69 *~;
#X obj 89 69 *~;
#X obj 89 91 +~;
#X obj 159 94 q8_rsqrt~;
#X obj 159 71 +~ 1e-020;
#X obj 73 119 *~;
#X obj 19 118 *~;
#X obj 181 290 r lock;
#X obj 29 245 lrshift~ 1;
#X obj 24 269 lrshift~ -1;
#X obj 141 245 lrshift~ 1;
#X obj 133 269 lrshift~ -1;
#X obj 35 300 *~;
#X obj 159 312 *~;
#X obj 19 325 +~;
#X obj 125 331 +~;
#X text 247 66 divide by the magnitude to make a unit-magnitude complex
amplitude (phase only). The 1e-020 is to prevent overflows. q8_rsqrt~
is reciprocal square root.;
#X text 247 165 Take FT of the window in back. Multiply its conjugate
by the normalized previous output. The result has the magnitude of
the input sound and phase (previous output phase) minus (back window
phase).;
#X text 249 370 Normalize again \, this time taking care to salt each
channel with 1e-015 so that we get a unit complex number even if everything
was zero heretofore.;
#X text 288 427 Now take the FT of the forward window and multiply
it by the unit complex number from above. The magnitude will be that
of the forward window and the phase will be the previous output phase
plus the phase difference between the two analysis windows -- except
that if "lock" is on \, they will be modified to agree progressively
better with the inter-channel phase relationships of the input.;
#X text 249 242 If "lock" is on \, encourage neighboring channels to
stay in phase by adding the two neighboring complex amplitudes. The
result will tend toward the channel with the strongest amplitude. If
the phase relationships between channels in the output and those in
the input are in parallel \, then neighboring channels of the quotient
will all have the same phase and this will not change any phases. (lrshift
shifts the signal to the left or right depending on its argument.)
;
#X text 387 560 'set' message to block;
#X text 390 577 allows variable size;
#X text 259 126 Read two windows \, one 1/4 length behind the other
\, of the input sound \, with Hann window function (see inside).;
#X obj 138 543 tabsend~ prev-imag-\$1;
#X obj 140 567 tabsend~ prev-real-\$1;
#X obj 127 622 r window-size-\$1;
#X obj 426 595 r window-size-\$1;
#X obj 52 598 tabreceive~ \$1-hann;
#X obj 20 8 tabreceive~ prev-real-\$1;
#X obj 73 29 tabreceive~ prev-imag-\$1;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 15 0;
#X connect 2 0 55 0;
#X connect 3 0 5 1;
#X connect 4 0 5 0;
#X connect 5 0 15 1;
#X connect 5 0 54 0;
#X connect 6 0 19 1;
#X connect 7 0 19 0;
#X connect 8 0 10 1;
#X connect 9 0 10 0;
#X connect 10 0 39 0;
#X connect 10 0 38 0;
#X connect 10 0 44 0;
#X connect 11 0 18 1;
#X connect 12 0 16 0;
#X connect 13 0 1 1;
#X connect 13 0 3 1;
#X connect 13 1 0 1;
#X connect 13 1 4 1;
#X connect 14 0 9 1;
#X connect 14 0 7 1;
#X connect 14 1 6 1;
#X connect 14 1 8 1;
#X connect 15 0 24 0;
#X connect 17 0 18 0;
#X connect 18 0 27 0;
#X connect 19 0 40 0;
#X connect 19 0 41 0;
#X connect 19 0 45 0;
#X connect 20 0 1 0;
#X connect 20 0 4 0;
#X connect 21 0 0 0;
#X connect 21 0 3 0;
#X connect 23 0 17 1;
#X connect 23 0 17 0;
#X connect 23 0 20 0;
#X connect 24 0 12 0;
#X connect 25 0 12 1;
#X connect 26 0 22 0;
#X connect 27 0 20 1;
#X connect 27 0 21 1;
#X connect 28 0 14 0;
#X connect 28 1 13 0;
#X connect 30 0 32 1;
#X connect 31 0 32 0;
#X connect 32 0 34 0;
#X connect 33 0 35 1;
#X connect 33 0 36 1;
#X connect 34 0 33 0;
#X connect 35 0 8 0;
#X connect 35 0 7 0;
#X connect 36 0 9 0;
#X connect 36 0 6 0;
#X connect 37 0 42 1;
#X connect 37 0 43 1;
#X connect 38 0 42 0;
#X connect 39 0 42 0;
#X connect 40 0 43 0;
#X connect 41 0 43 0;
#X connect 42 0 44 1;
#X connect 43 0 45 1;
#X connect 44 0 23 0;
#X connect 45 0 11 0;
#X connect 45 0 11 1;
#X connect 45 0 21 0;
#X connect 56 0 25 0;
#X connect 57 0 26 0;
#X connect 58 0 24 1;
#X connect 59 0 31 1;
#X connect 59 0 31 0;
#X connect 59 0 36 0;
#X connect 60 0 30 1;
#X connect 60 0 30 0;
#X connect 60 0 35 0;
#X restore 55 480 pd fft-analysis;
#N canvas 260 50 647 768 phase-tables 0;
#N canvas 0 50 450 300 (subpatch) 0;
#X array prev-imag-\$1 4096 float 0;
#X coords 0 1000 4096 -1000 400 300 1 0 0;
#X restore 169 326 graph;
#N canvas 0 50 450 300 (subpatch) 0;
#X array prev-real-\$1 4096 float 0;
#X coords 0 500 4096 -500 400 300 1 0 0;
#X restore 170 17 graph;
#X restore 440 504 pd phase-tables;
#X text 164 364 hundredths;
#X text 493 294 in cents;
#X text 389 359 normal;
#N canvas 0 50 944 982 hann-window 0;
#N canvas 0 50 450 300 (subpatch) 0;
#X array \$1-hann 8192 float 0;
#X coords 0 1 8191 0 300 100 1 0 0;
#X restore 82 311 graph;
#X obj 378 165 osc~;
#X obj 378 190 *~ -0.5;
#X obj 378 214 +~ 0.5;
#X obj 38 173 /;
#X obj 208 151 samplerate~;
#X obj 177 204 swap;
#X obj 191 231 /;
#X obj 49 201 * 1000;
#X obj 38 115 t f b f;
#X msg 173 92 resize \$1;
#X msg 382 130 0;
#X obj 330 131 t f b;
#X text 15 8 calculate Hann window table (variable window size) and
constants window-hz (fundamental frequency of analysis) \, window-sec
and window-msec (analysis window size in seconds and msec).;
#X obj 263 72 r sampleperms-\$1;
#X obj 263 97 * 1000;
#X obj 243 127 f;
#X obj 37 88 r window-size-\$1;
#X obj 49 228 s window-msec-\$1;
#X obj 38 251 s window-sec-\$1;
#X obj 177 252 s window-hz-\$1;
#X obj 331 247 tabwrite~ \$1-hann;
#X obj 330 105 r window-hz-\$1;
#X obj 173 116 s \$1-hann;
#X floatatom 533 134 5 0 0 0 - - -, f 5;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 21 0;
#X connect 4 0 8 0;
#X connect 4 0 19 0;
#X connect 6 0 7 0;
#X connect 6 1 7 1;
#X connect 7 0 20 0;
#X connect 8 0 18 0;
#X connect 9 0 4 0;
#X connect 9 0 6 0;
#X connect 9 1 16 0;
#X connect 9 2 10 0;
#X connect 10 0 23 0;
#X connect 11 0 1 1;
#X connect 12 0 1 0;
#X connect 12 1 11 0;
#X connect 12 1 21 0;
#X connect 14 0 15 0;
#X connect 14 0 24 0;
#X connect 15 0 16 1;
#X connect 16 0 6 1;
#X connect 16 0 4 1;
#X connect 17 0 9 0;
#X connect 22 0 12 0;
#X restore 440 528 pd hann-window;
#X obj 441 439 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 460 438 <- record;
#X obj 493 387 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 0
1;
#X obj 262 386 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X msg 345 336 200;
#X msg 345 358 100;
#X msg 345 380 20;
#X text 386 335 contract;
#X text 390 380 expand;
#X obj 493 407 s lock;
#X text 494 277 detune;
#X text 55 330 location;
#X text 52 346 (stops;
#X text 57 361 motion);
#X text 165 348 motion in;
#X floatatom 607 419 5 0 0 0 - window-size-#1 -, f 5;
#X msg 607 307 512;
#X msg 607 329 1024;
#X msg 607 351 2048;
#X msg 607 373 4096;
#X text 607 274 window size \,;
#X text 607 289 samples;
#X text 648 306 <- set;
#X text 100 306 ------- location controls -------;
#X text 660 419 (check);
#X text 23 35 This patch takes a sound \, analyzes windows in it both
for channel magnitude and for phase precession in each channel (compared
to another operlapping window). The real-time output recreates the
same magnitudes and phase precession \, although the phases themselves
are in general different. You can control either the location or its
motion (setting location stops motion \, while setting a non-zero motion
causes the location to change automatically). "Rewind" goes back to
the beginning. You can use different window sizes (use the message
boxes - the number box is for readout). The "lock" feature forces phase
coherency between neighboring channels \, which makes a more present
sound but can add artifacts to the sound. Look in "pd fft-analysis"
to see the workings.;
#X obj 551 316 bng 15 250 50 0 no-detune empty empty 0 -6 0 8 -262144
-1 -1;
#X obj 535 460 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 466 458 file ->;
#X text 103 7 PHASE VOCODER FOR TIME STRETCHING AND CONTRACTION;
#X text 483 568 updated for Pd version 0.44;
#X obj 56 517 outlet~;
#X floatatom 608 515 5 0 0 0 - - -, f 5;
#X obj 167 407 s speed-\$1;
#X obj 55 407 s location-\$1;
#X obj 494 338 s transpo-\$1;
#X obj 607 395 s window-size-\$1;
#X obj 262 408 s rewind-\$1;
#X obj 345 407 s auto-\$1;
#X obj 583 464 r \$1-samp-msec;
#X connect 0 0 44 0;
#X connect 1 0 42 0;
#X connect 2 0 43 0;
#X connect 3 0 40 0;
#X connect 11 0 18 0;
#X connect 12 0 46 0;
#X connect 13 0 47 0;
#X connect 14 0 47 0;
#X connect 15 0 47 0;
#X connect 25 0 45 0;
#X connect 26 0 45 0;
#X connect 27 0 45 0;
#X connect 28 0 45 0;
#X connect 48 0 41 0;
